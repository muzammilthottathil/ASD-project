[{"/home/taqnar/projects/find-my-doctor/client/src/index.js":"1","/home/taqnar/projects/find-my-doctor/client/src/App.js":"2","/home/taqnar/projects/find-my-doctor/client/src/components/Home.js":"3","/home/taqnar/projects/find-my-doctor/client/src/components/Main.js":"4","/home/taqnar/projects/find-my-doctor/client/src/components/Hedaer.js":"5","/home/taqnar/projects/find-my-doctor/client/src/components/DoctorCardList.js":"6","/home/taqnar/projects/find-my-doctor/client/src/components/HospitalCardList.js":"7","/home/taqnar/projects/find-my-doctor/client/src/components/SimpleCard.js":"8","/home/taqnar/projects/find-my-doctor/client/src/components/DoctorDetails.js":"9","/home/taqnar/projects/find-my-doctor/client/src/components/Header2.js":"10","/home/taqnar/projects/find-my-doctor/client/src/components/HospitalCard.js":"11","/home/taqnar/projects/find-my-doctor/client/src/components/HospitalDetais.js":"12","/home/taqnar/projects/find-my-doctor/client/src/components/HospitalMap.js":"13","/home/taqnar/projects/find-my-doctor/client/src/components/ServiceList.js":"14","/home/taqnar/projects/find-my-doctor/client/src/components/DepartmentList.js":"15","/home/taqnar/projects/find-my-doctor/client/src/components/Modal.js":"16","/home/taqnar/projects/find-my-doctor/client/src/components/Map.js":"17","/home/taqnar/projects/find-my-doctor/client/src/components/Context.js":"18","/home/taqnar/projects/find-my-doctor/client/src/components/distanceCalculator.js":"19","/home/taqnar/projects/find-my-doctor/client/src/components/Map2.js":"20","/home/taqnar/projects/find-my-doctor/client/src/components/docSpec.js":"21","/home/taqnar/projects/find-my-doctor/client/src/components/MainApp.js":"22","/home/taqnar/projects/find-my-doctor/client/src/components/service.js":"23"},{"size":146,"mtime":1610719438671,"results":"24","hashOfConfig":"25"},{"size":300,"mtime":1611079500088,"results":"26","hashOfConfig":"25"},{"size":2950,"mtime":1610885046355,"results":"27","hashOfConfig":"25"},{"size":2332,"mtime":1611108462837,"results":"28","hashOfConfig":"25"},{"size":6430,"mtime":1611108421433,"results":"29","hashOfConfig":"25"},{"size":1798,"mtime":1611109295725,"results":"30","hashOfConfig":"25"},{"size":1443,"mtime":1611109505629,"results":"31","hashOfConfig":"25"},{"size":2194,"mtime":1610939134373,"results":"32","hashOfConfig":"25"},{"size":3118,"mtime":1611083241032,"results":"33","hashOfConfig":"25"},{"size":357,"mtime":1610877351634,"results":"34","hashOfConfig":"25"},{"size":2446,"mtime":1611106336412,"results":"35","hashOfConfig":"25"},{"size":5204,"mtime":1611106022398,"results":"36","hashOfConfig":"25"},{"size":2161,"mtime":1611105983393,"results":"37","hashOfConfig":"25"},{"size":1169,"mtime":1611085902417,"results":"38","hashOfConfig":"25"},{"size":2413,"mtime":1611085707176,"results":"39","hashOfConfig":"25"},{"size":1210,"mtime":1610905328647,"results":"40","hashOfConfig":"25"},{"size":980,"mtime":1610938849377,"results":"41","hashOfConfig":"25"},{"size":2101,"mtime":1611108287565,"results":"42","hashOfConfig":"25"},{"size":568,"mtime":1610931873153,"results":"43","hashOfConfig":"25"},{"size":981,"mtime":1610939039870,"results":"44","hashOfConfig":"25"},{"size":559,"mtime":1611069696572,"results":"45","hashOfConfig":"25"},{"size":6866,"mtime":1611082756098,"results":"46","hashOfConfig":"25"},{"size":456,"mtime":1610941366407,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"iknjns",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/taqnar/projects/find-my-doctor/client/src/index.js",[],["102","103"],"/home/taqnar/projects/find-my-doctor/client/src/App.js",[],"/home/taqnar/projects/find-my-doctor/client/src/components/Home.js",["104"],"import { Button, Container, Col } from 'react-bootstrap'\nimport DoctorHero from '../Assets/DoctorHero.png'\nimport locIcon from '../Assets/locIcon.svg'\nimport Modal from './Modal'\nimport { useState } from 'react'\n\nexport default function Home() {\n    const [modalStatus, setModalStatus] = useState(false)\n    return (\n        <>\n            <div\n                style={{\n                    minHeight: '100vh',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}\n            >\n                <div className=\"row  p-5\">\n                    <Col md={{ span: 5, offset: 1 }} className=\"m-auto\">\n                        <h1\n                            style={{\n                                fontFamily: \"'Racing Sans One', cursive\",\n                                fontSize: '100px'\n                            }}\n                        >\n                            FinD My Doctor\n                        </h1>\n                        <p\n                            style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: '16px',\n                                marginTop: '20px'\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet consectetur adipisicing\n                            elit. Aliquam quia vitae suscipit quaerat. Ad a\n                            voluptates amet beatae quidem. Quibusdam repellendus\n                            molestiae non perferendis aperiam vitae explicabo,\n                            quidem cumque aspernatur. Quibusdam aliquam\n                            perferendis nemo architecto optio dolorem, facilis\n                            labore rem tempora, fugiat laudantium atque nesciunt\n                            placeat dolorum nulla a velit!\n                        </p>\n                        <Button\n                            variant=\"secondary\"\n                            style={{\n                                marginTop: '20px'\n                            }}\n                            onClick={() => setModalStatus(true)}\n                        >\n                            Choose Your Location\n                            <img\n                                className=\"ml-2\"\n                                src={locIcon}\n                                alt=\"location Icon\"\n                            />\n                        </Button>\n                    </Col>\n                    <div className=\"col-5\">\n                        <img src={DoctorHero} height=\"800\" alt=\"Doctor Hero\" />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"map-modal\">\n                <Modal\n                    modalStatus={modalStatus}\n                    setModalStatus={setModalStatus}\n                />\n            </div>\n        </>\n    )\n}\n","/home/taqnar/projects/find-my-doctor/client/src/components/Main.js",["105","106","107","108"],"/home/taqnar/projects/find-my-doctor/client/src/components/Hedaer.js",["109"],"/home/taqnar/projects/find-my-doctor/client/src/components/DoctorCardList.js",["110","111","112","113"],"/home/taqnar/projects/find-my-doctor/client/src/components/HospitalCardList.js",["114","115"],"/home/taqnar/projects/find-my-doctor/client/src/components/SimpleCard.js",["116","117"],"import doctorImage from '../Assets/doctorImage.png'\nimport hospitalImage from '../Assets/hospitalImage.png'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport '../styles/Home.css'\nimport { useData } from './Context'\nimport { useEffect } from 'react'\n\nexport default function SimpleCard({ type, name, details, id }) {\n    const { specialization, contact } = details\n    const history = useHistory()\n\n    const { setCurrentDoctor, setCurrentHospital } = useData()\n\n    function setClick() {\n        type === 'doctor'\n            ? setCurrentDoctor(() => ({\n                  doc_name: name,\n                  doc_spec: specialization,\n                  doc_id: id\n              }))\n            : setCurrentHospital(() => ({\n                  hos_id: id\n              }))\n        type === 'doctor'\n            ? history.push('/doctor-details')\n            : history.push('/hospital-details')\n    }\n\n    return (\n        <div onClick={setClick}>\n            <div\n                style={{\n                    border: '2px solid #FFFFFF',\n                    borderRadius: '30px',\n                    cursor: 'pointer'\n                }}\n                className=\"m-3 simple-card\"\n            >\n                <div className=\"d-flex p-4\">\n                    {type === 'doctor' ? (\n                        <img src={doctorImage} alt=\"doctorImage\" height=\"150\" />\n                    ) : (\n                        <img\n                            src={hospitalImage}\n                            alt=\"hospitalImage\"\n                            height=\"150\"\n                        />\n                    )}\n\n                    <div className=\"ml-4\">\n                        <h3>{name}</h3>\n                        <p\n                            style={{\n                                fontSize: '20px',\n                                color: '#fffa'\n                            }}\n                        >\n                            {type === 'doctor'\n                                ? specialization\n                                : `Booking Contact :${contact}`}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/taqnar/projects/find-my-doctor/client/src/components/DoctorDetails.js",["118","119","120"],"import Header2 from './Header2'\nimport doctorImage from '../Assets/doctorImage.png'\nimport HospitalCard from './HospitalCard'\nimport { useData } from './Context'\nimport { useEffect, useState } from 'react'\n\nexport default function DoctorDetails() {\n    const [infoArray, setInfoArray] = useState([])\n\n    const { currentDoctor, doctorData } = useData()\n\n    // function makeList() {\n    //     let info = []\n    //     hospitalData.map((value, index) => {\n    //         if (value.doc_id === currentDoctor.doc_id) {\n    //             info.push({\n    //                 hos_name: value.hos_name,\n    //                 hos_id: value.hos_id,\n    //                 hos_contact: value.hos_contact,\n    //                 time: value.time.split(',')\n    //             })\n    //         }\n    //     })\n    //     return info\n    // }\n\n    useEffect(() => {\n        // setInfoArray(() => makeList())\n    }, [currentDoctor, doctorData])\n    return (\n        <div\n            className=\"p-5 m-auto\"\n            style={{\n                width: '90%'\n            }}\n        >\n            <Header2 />\n            <div className=\"row \">\n                <div className=\"col-3\">\n                    <img src={doctorImage} alt=\"doctorImage\" />\n                    <h3 className=\"mt-5\">{currentDoctor.doc_name}</h3>\n                    <p\n                        style={{\n                            fontSize: '20px',\n                            color: '#fffa'\n                        }}\n                    >\n                        {currentDoctor.doc_spec}\n                    </p>\n                </div>\n                <div\n                    className=\"col-9 \"\n                    style={{\n                        border: '1px solid #FFFFFF',\n                        borderRadius: '30px'\n                    }}\n                >\n                    <div className=\"p-3\">\n                        <div className=\"row\">\n                            {Object.keys(doctorData).map((docID, index) => {\n                                if (Number(docID) === currentDoctor.doc_id) {\n                                    return doctorData[docID].map(\n                                        (hosInfo, index) => (\n                                            <div className=\"col-6\" key={index}>\n                                                <HospitalCard\n                                                    name={hosInfo.hos_name}\n                                                    contact={\n                                                        hosInfo.hos_contact\n                                                    }\n                                                    time={hosInfo.time}\n                                                    id={hosInfo.hos_id}\n                                                />\n                                            </div>\n                                        )\n                                    )\n                                }\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/taqnar/projects/find-my-doctor/client/src/components/Header2.js",[],"/home/taqnar/projects/find-my-doctor/client/src/components/HospitalCard.js",["121"],"/home/taqnar/projects/find-my-doctor/client/src/components/HospitalDetais.js",["122","123","124","125","126"],"/home/taqnar/projects/find-my-doctor/client/src/components/HospitalMap.js",[],"/home/taqnar/projects/find-my-doctor/client/src/components/ServiceList.js",["127","128"],"import { useEffect, useState } from 'react'\nimport { useData } from './Context'\n\nexport default function ServiceList() {\n    const [services, setServices] = useState([])\n\n    const { currentHospital, hospitalData } = useData()\n\n    function getDetails() {\n        hospitalData.map((val) => {\n            if (val.hos_id === currentHospital.hos_id) {\n                setServices(() => [...new Set(val.services)])\n            }\n        })\n    }\n\n    useEffect(() => {\n        getDetails()\n    }, [currentHospital, hospitalData])\n\n    return (\n        <div className=\"row w-100 m-auto\">\n            {services.map((value, key) => (\n                <div className=\"col-4 mb-5 mt-3\" key={key}>\n                    <div\n                        className=\"text-align-center\"\n                        style={{\n                            border: '1px solid #fff',\n                            fontSize: '16px',\n                            backgroundColor: '#40353F',\n                            padding: '30px'\n                        }}\n                    >\n                        {value}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","/home/taqnar/projects/find-my-doctor/client/src/components/DepartmentList.js",["129","130"],"import { useState, useEffect } from 'react'\nimport { useData } from './Context'\nimport { docSpec } from './docSpec'\nimport SimpleCard from './SimpleCard'\n\nexport default function DepartmentList() {\n    const [specification, setSpecification] = useState([])\n\n    const { currentHospital, hospitalData } = useData()\n\n    function getDetails() {\n        let arr = []\n        let allDoctors = []\n\n        hospitalData.map((val) => {\n            if (val.hos_id === currentHospital.hos_id) {\n                allDoctors = val.doctors\n            }\n        })\n        docSpec.forEach((specName) => {\n            let docDetails = []\n            allDoctors.forEach((doc) => {\n                if (doc.specifications.includes(specName)) {\n                    docDetails.push({\n                        doc_name: doc.doc_name,\n                        doc_id: doc.doc_id,\n                        doc_spec: doc.specifications\n                    })\n                }\n            })\n            if (docDetails.length > 0) {\n                arr.push({\n                    specification: specName,\n                    docDetails: docDetails\n                })\n            }\n        })\n        setSpecification(() => arr)\n    }\n\n    useEffect(() => {\n        getDetails()\n    }, [currentHospital, hospitalData])\n    return (\n        <div className=\"w-100\">\n            {specification.map((value, index) => (\n                <div className=\"mt-2 mb-3\" key={index}>\n                    <h4>{value.specification}</h4>\n                    <hr color=\"#fff\" />\n                    <div className=\"row\">\n                        {value.docDetails.map((doctor, index) => (\n                            <div className=\"col-6\" key={index}>\n                                <SimpleCard\n                                    type={'doctor'}\n                                    name={doctor.doc_name}\n                                    details={{\n                                        specialization: doctor.doc_spec.join(\n                                            ', '\n                                        ),\n                                        contact: ''\n                                    }}\n                                    id={doctor.doc_id}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n","/home/taqnar/projects/find-my-doctor/client/src/components/Modal.js",["131","132"],"import MapContainer from './Map'\nimport { Link } from 'react-router-dom'\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl'\nimport styles from '../styles/map.module.css'\nimport { useRef } from 'react'\n\nexport default function Modal({ modalStatus, setModalStatus }) {\n    // var mapboxgl = require('mapbox-gl/dist/mapbox-gl.js')\n    // const mapRef = useRef()\n\n    // mapboxgl.accessToken =\n    //     'pk.eyJ1IjoidGFxbmFyIiwiYSI6ImNrazFlcGU5ZzBxamYydnJ1YTYxamZwN2IifQ.sDx2oThjRPndaYQW8kX-eg'\n    // var map = new mapboxgl.Map({\n    //     container: mapRef.current,\n    //     style: 'mapbox://styles/mapbox/streets-v11'\n    // })\n\n    return (\n        <div className={modalStatus ? styles.modalMap : styles.modalMapClosed}>\n            <span className={styles.span} onClick={() => setModalStatus(false)}>\n                Close\n            </span>\n            <div className={styles.mapDiv}>\n                <MapContainer />\n            </div>\n            <Link\n                className=\"btn btn-primary w-100 p-3\"\n                style={{\n                    borderRadius: '20px'\n                }}\n                to=\"/find-near\"\n            >\n                SELECT\n            </Link>\n        </div>\n    )\n}\n","/home/taqnar/projects/find-my-doctor/client/src/components/Map.js",[],"/home/taqnar/projects/find-my-doctor/client/src/components/Context.js",[],"/home/taqnar/projects/find-my-doctor/client/src/components/distanceCalculator.js",[],"/home/taqnar/projects/find-my-doctor/client/src/components/Map2.js",[],"/home/taqnar/projects/find-my-doctor/client/src/components/docSpec.js",[],"/home/taqnar/projects/find-my-doctor/client/src/components/MainApp.js",["133","134","135","136","137","138","139","140","141","142","143","144"],"import Home from './Home'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Main from './Main'\nimport DoctorDetails from './DoctorDetails'\nimport HospitalDetais from './HospitalDetais'\nimport HospitalMap from './HospitalMap'\nimport Axios from 'axios'\nimport { Button } from 'react-bootstrap'\nimport { useEffect, useState } from 'react'\nimport { useData } from './Context'\n\nfunction MainApp() {\n    const [docData, setDocData] = useState({})\n    const [hosData, setHosData] = useState([])\n    const [hosDataAll, setHosDataAll] = useState([])\n    const [hosDataP1, setHosDataP1] = useState({})\n\n    const { setDoctorData, setHospitalData } = useData()\n\n    function getDocData() {\n        let requiredData = {}\n        let goneThrough = []\n        Axios.get('http://localhost:4000/doctor/data')\n            .then((res) => {\n                const response = res.data\n                response.map((value1) => {\n                    const doc_id = value1.doc_id\n                    if (!goneThrough.includes(doc_id)) {\n                        goneThrough.push(doc_id)\n                        let arr = []\n                        response.map((value2) => {\n                            if (value2.doc_id === doc_id) {\n                                arr.push({\n                                    hos_id: value2.hos_id,\n                                    hos_name: value2.hos_name,\n                                    hos_contact: value2.hos_contact,\n                                    time: value2.time.split(',')\n                                })\n                            }\n                        })\n\n                        requiredData[doc_id] = arr\n                    }\n                })\n            })\n            .then(() => {\n                setDocData(() => requiredData)\n                setDoctorData(() => requiredData)\n            })\n            .catch((e) => {\n                console.log(e)\n            })\n    }\n\n    function getHosData() {\n        let requiredData = []\n        let goneThrough = []\n        Axios.get('http://localhost:4000/hospital/data1')\n            .then((res) => {\n                const response = res.data\n                response.map((value1) => {\n                    if (!goneThrough.includes(value1.hos_id)) {\n                        goneThrough.push(value1.hos_id)\n\n                        let arr = []\n                        response.map((value2) => {\n                            if (value2.hos_id === value1.hos_id) {\n                                arr.push(value2.ser_name)\n                            }\n                        })\n                        requiredData.push({\n                            hos_name: value1.hos_name,\n                            hos_id: value1.hos_id,\n                            hos_contact: value1.hos_contact,\n                            hos_address: value1.hos_address,\n                            hos_latitude: value1.hos_latitude,\n                            hos_longitude: value1.hos_longitude,\n                            services: arr\n                        })\n                    }\n                })\n            })\n            .then(() => {\n                setHosData(() => requiredData)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function getDocDataFull() {\n        let requiredData = {}\n        let goneThrough = []\n        let goneThrough1 = []\n        Axios.get('http://localhost:4000/doctor/data1')\n            .then((res) => {\n                const response = res.data\n                // getting doc details\n                let doctors = {}\n                response.map((value3) => {\n                    if (!goneThrough1.includes(value3.doc_id)) {\n                        goneThrough1.push(value3.doc_id)\n                        let arr2 = []\n                        response.map((value4) => {\n                            if (value3.doc_id === value4.doc_id) {\n                                arr2.push(value4.spec_name)\n                            }\n                        })\n                        doctors[value3.doc_id] = {\n                            doc_id: value3.doc_id,\n                            doc_name: value3.doc_name,\n                            specifications: [...new Set(arr2)]\n                        }\n                    }\n                })\n\n                response.map((value1) => {\n                    if (!goneThrough.includes(value1.hos_id)) {\n                        goneThrough.push(value1.hos_id)\n                        let arr1 = []\n                        response.map((value2) => {\n                            if (value1.hos_id === value2.hos_id) {\n                                arr1.push(doctors[value2.doc_id])\n                            }\n                        })\n                        requiredData[value1.hos_id] = {\n                            hos_id: value1.hos_id,\n                            doctors: [...new Set(arr1)]\n                        }\n                    }\n                })\n            })\n            .then(() => {\n                setHosDataP1(() => requiredData)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function getAllHosData() {\n        let final = []\n        hosData.map((values) => {\n            final.push({\n                ...values,\n                doctors: hosDataP1[values.hos_id].doctors\n            })\n        })\n\n        setHospitalData(() => final)\n        setHosDataAll(() => final)\n    }\n\n    useEffect(() => {\n        getDocData()\n        getHosData()\n        getDocDataFull()\n        getAllHosData()\n    }, [])\n    // console.log(hosDataAll)\n    return (\n        <>\n            <Button\n                onClick={getAllHosData}\n                style={{\n                    position: 'absolute',\n                    top: '0',\n                    left: '0',\n                    opacity: '0'\n                }}\n            >\n                Click Me\n            </Button>\n\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/find-near\" exact component={Main} />\n                    <Route\n                        path=\"/doctor-details\"\n                        exact\n                        component={DoctorDetails}\n                    />\n                    <Route\n                        path=\"/hospital-details\"\n                        exact\n                        component={HospitalDetais}\n                    />\n                    <Route\n                        path=\"/hospital-details/map\"\n                        exact\n                        component={HospitalMap}\n                    />\n\n                    <Route path=\"*\" component={Home} />\n                </Switch>\n            </Router>\n        </>\n    )\n}\n\nexport default MainApp\n","/home/taqnar/projects/find-my-doctor/client/src/components/service.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":18,"nodeType":"151","messageId":"152","endLine":1,"endColumn":27},{"ruleId":"149","severity":1,"message":"153","line":1,"column":21,"nodeType":"151","messageId":"152","endLine":1,"endColumn":29},{"ruleId":"149","severity":1,"message":"154","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":38,"column":34,"nodeType":"157","messageId":"158","endLine":38,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":56,"column":8,"nodeType":"161","endLine":56,"endColumn":22,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"163","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":19},{"ruleId":"149","severity":1,"message":"164","line":9,"column":33,"nodeType":"151","messageId":"152","endLine":9,"endColumn":44},{"ruleId":"155","severity":1,"message":"156","line":27,"column":40,"nodeType":"157","messageId":"158","endLine":27,"endColumn":42},{"ruleId":"155","severity":1,"message":"156","line":28,"column":37,"nodeType":"157","messageId":"158","endLine":28,"endColumn":39},{"ruleId":"159","severity":1,"message":"165","line":37,"column":8,"nodeType":"161","endLine":37,"endColumn":48,"suggestions":"166"},{"ruleId":"149","severity":1,"message":"164","line":8,"column":33,"nodeType":"151","messageId":"152","endLine":8,"endColumn":44},{"ruleId":"159","severity":1,"message":"167","line":26,"column":8,"nodeType":"161","endLine":26,"endColumn":42,"suggestions":"168"},{"ruleId":"149","severity":1,"message":"169","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":14},{"ruleId":"149","severity":1,"message":"163","line":7,"column":10,"nodeType":"151","messageId":"152","endLine":7,"endColumn":19},{"ruleId":"149","severity":1,"message":"170","line":8,"column":12,"nodeType":"151","messageId":"152","endLine":8,"endColumn":21},{"ruleId":"149","severity":1,"message":"171","line":8,"column":23,"nodeType":"151","messageId":"152","endLine":8,"endColumn":35},{"ruleId":"155","severity":1,"message":"172","line":60,"column":73,"nodeType":"157","messageId":"173","endLine":60,"endColumn":75},{"ruleId":"155","severity":1,"message":"156","line":15,"column":32,"nodeType":"157","messageId":"158","endLine":15,"endColumn":34},{"ruleId":"149","severity":1,"message":"169","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":14},{"ruleId":"149","severity":1,"message":"174","line":8,"column":10,"nodeType":"151","messageId":"152","endLine":8,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":19,"column":32,"nodeType":"157","messageId":"158","endLine":19,"endColumn":34},{"ruleId":"155","severity":1,"message":"156","line":31,"column":32,"nodeType":"157","messageId":"158","endLine":31,"endColumn":34},{"ruleId":"159","severity":1,"message":"175","line":42,"column":8,"nodeType":"161","endLine":42,"endColumn":39,"suggestions":"176"},{"ruleId":"155","severity":1,"message":"156","line":10,"column":32,"nodeType":"157","messageId":"158","endLine":10,"endColumn":34},{"ruleId":"159","severity":1,"message":"175","line":19,"column":8,"nodeType":"161","endLine":19,"endColumn":39,"suggestions":"177"},{"ruleId":"155","severity":1,"message":"156","line":15,"column":32,"nodeType":"157","messageId":"158","endLine":15,"endColumn":34},{"ruleId":"159","severity":1,"message":"175","line":43,"column":8,"nodeType":"161","endLine":43,"endColumn":39,"suggestions":"178"},{"ruleId":"149","severity":1,"message":"179","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":16},{"ruleId":"149","severity":1,"message":"180","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":16},{"ruleId":"149","severity":1,"message":"181","line":13,"column":12,"nodeType":"151","messageId":"152","endLine":13,"endColumn":19},{"ruleId":"149","severity":1,"message":"182","line":15,"column":12,"nodeType":"151","messageId":"152","endLine":15,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":26,"column":39,"nodeType":"157","messageId":"158","endLine":26,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":31,"column":47,"nodeType":"157","messageId":"158","endLine":31,"endColumn":49},{"ruleId":"155","severity":1,"message":"156","line":61,"column":39,"nodeType":"157","messageId":"158","endLine":61,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":66,"column":47,"nodeType":"157","messageId":"158","endLine":66,"endColumn":49},{"ruleId":"155","severity":1,"message":"156","line":100,"column":39,"nodeType":"157","messageId":"158","endLine":100,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":104,"column":47,"nodeType":"157","messageId":"158","endLine":104,"endColumn":49},{"ruleId":"155","severity":1,"message":"156","line":117,"column":39,"nodeType":"157","messageId":"158","endLine":117,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":121,"column":47,"nodeType":"157","messageId":"158","endLine":121,"endColumn":49},{"ruleId":"155","severity":1,"message":"156","line":143,"column":30,"nodeType":"157","messageId":"158","endLine":143,"endColumn":32},{"ruleId":"159","severity":1,"message":"183","line":159,"column":8,"nodeType":"161","endLine":159,"endColumn":10,"suggestions":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'findingNearestHospital' and 'setSortedHospitalData'. Either include them or remove the dependency array.","ArrayExpression",["187"],"'useEffect' is defined but never used.","'searchValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllDoctors'. Either include it or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.",["189"],"'Link' is defined but never used.","'infoArray' is assigned a value but never used.","'setInfoArray' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'docSpec' is defined but never used.","React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["190"],["191"],["192"],"'mapboxgl' is defined but never used.","'useRef' is defined but never used.","'docData' is assigned a value but never used.","'hosDataAll' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllHosData' and 'getDocData'. Either include them or remove the dependency array.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"200","fix":"202"},{"desc":"200","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [findingNearestHospital, hospitalData, setSortedHospitalData]",{"range":"206","text":"207"},"Update the dependencies array to be: [getAllDoctors, sortedHospitalData, specificationValue]",{"range":"208","text":"209"},"Update the dependencies array to be: [sortedHospitalData, serviceValue, filter]",{"range":"210","text":"211"},"Update the dependencies array to be: [currentHospital, getDetails, hospitalData]",{"range":"212","text":"213"},{"range":"214","text":"213"},{"range":"215","text":"213"},"Update the dependencies array to be: [getAllHosData, getDocData]",{"range":"216","text":"217"},[1465,1479],"[findingNearestHospital, hospitalData, setSortedHospitalData]",[1078,1118],"[getAllDoctors, sortedHospitalData, specificationValue]",[765,799],"[sortedHospitalData, serviceValue, filter]",[1237,1268],"[currentHospital, getDetails, hospitalData]",[493,524],[1259,1290],[5639,5641],"[getAllHosData, getDocData]"]